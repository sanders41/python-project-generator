---
source: src/github_actions.rs
expression: content
---
"name: Testing\n\non:\n  push:\n    branches:\n    - main\n  pull_request:\nenv:\n  PYTHON_VERSION: \"3.10\"\n  SECRET_KEY: \"someKey\"\n  PRODUCTION_MODE: false\n  FIRST_SUPERUSER_EMAIL: \"some@email.com\"\n  FIRST_SUPERUSER_PASSWORD: \"somePassword1!\"\n  FIRST_SUPERUSER_NAME: \"Super User\"\n  POSTGRES_HOST: \"127.0.0.1\"\n  POSTGRES_USER: \"postgres\"\n  POSTGRES_PASSWORD: \"test_password\"\n  POSTGRES_DB: \"test_db\"\n  VALKEY_HOST: \"127.0.0.1\"\n  VALKEY_PASSWORD: \"test_password\"\n  MEILISEARCH_HOST: http://127.0.0.1\n  STACK_NAME: \"test-stack\"\n  DOMAIN: \"127.0.0.1\"\n  LOG_LEVEL: \"DEBUG\"\n  CI: true\njobs:\n  linting:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v5\n    - name: Install Rust\n      uses: dtolnay/rust-toolchain@stable\n    - name: Cache dependencies\n      uses: Swatinem/rust-cache@v2\n    - name: Install sqlx-cli\n      run: cargo install sqlx-cli --no-default-features -F native-tls -F postgres\n    - name: Install Poetry\n      run: pipx install poetry\n    - name: Configure poetry\n      run: |\n        poetry config virtualenvs.create true\n        poetry config virtualenvs.in-project true\n    - name: Set up Python\n      uses: actions/setup-python@v6\n      with:\n        python-version: ${{ env.PYTHON_VERSION }}\n        cache: \"poetry\"\n    - name: Install Dependencies\n      run: poetry install\n    - name: Ruff format check\n      run: poetry run ruff format my_project tests --check\n    - name: Lint with ruff\n      run: poetry run ruff check .\n    - name: mypy check\n      run: poetry run mypy .\n  testing:\n    strategy:\n      fail-fast: false\n      matrix:\n        python-version: [\"3.10\", \"3.11\", \"3.12\", \"3.13\", \"3.14\"]\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v5\n    - name: Install Poetry\n      run: pipx install poetry\n    - name: Configure poetry\n      run: |\n        poetry config virtualenvs.create true\n        poetry config virtualenvs.in-project true\n    - name: Set up Python ${{ matrix.python-version }}\n      uses: actions/setup-python@v6\n      with:\n        python-version: ${{ matrix.python-version }}\n        cache: \"poetry\"\n    - name: Install Dependencies\n      run: poetry install\n    - name: make .env\n      run: touch .env\n    - name: Start docker containers\n      run: docker compose up db valkey migrations -d\n    - name: Test with pytest\n      run: poetry run pytest -n auto\n"
