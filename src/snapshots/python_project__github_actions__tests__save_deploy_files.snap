---
source: src/github_actions.rs
expression: test_content
---
"name: Deploy to Testing\non:\n  push:\n    branches:\n      - main\n  workflow_dispatch:\njobs:\n  deploy:\n    runs-on:\n      - self-hosted\n      - testing\n    env:\n      ENVIRONMENT: testing\n      DOMAIN: ${{ secrets.DOMAIN_TESTING }}\n      STACK_NAME: ${{ secrets.STACK_NAME_TESTING }}\n      SECRET_KEY: ${{ secrets.SECRET_KEY }}\n      FIRST_SUPERUSER_EMAIL: ${{ secrets.FIRST_SUPERUSER_EMAIL }}\n      FIRST_SUPERUSER_PASSWORD: ${{ secrets.FIRST_SUPERUSER_PASSWORD }}\n      FIRST_SUPERUSER_NAME: ${{ secrets.FIRST_SUPERUSER_NAME }}\n      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}\n      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}\n      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}\n      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}\n      VALKEY_HOST: ${{ secrets.VALKEY_HOST }}\n      VALKEY_PASSWORD: ${{ secrets.VALKEY_PASSWORD }}\n      HANDWRITING_OCR_TOKEN: ${{ secrets.HANDWRITING_OCR_TOKEN }}\n      USERNAME: ${{ secrets.FIRST_SUPERUSER_EMAIL }}\n      PASSWORD: ${{ secrets.FIRST_SUPERUSER_PASSWORD }}\n      EMAIL: ${{ secrets.FIRST_SUPERUSER_EMAIL }}\n      ERROR_NOTIFICATION_URL: ${{ secrets.ERROR_NOTIFICATION_URL_TESTING }}\n      LOG_LEVEL: \"DEBUG\"\n    steps:\n      - name: Fix permissions\n        run: |\n          if [ -d \"./data\" ]; then\n            sudo chown -R $USER:$USER ./data\n          fi\n      - name: Checkout\n        uses: actions/checkout@v5\n      - name: Create .env file\n        run: |\n          HASHED_PASSWORD=$(openssl passwd -apr1 \"${PASSWORD}\" | sed 's/\\$/\\$\\$/g')\n          cat > .env << EOF\n          ENVIRONMENT=${ENVIRONMENT}\n          DOMAIN=${DOMAIN}\n          STACK_NAME=${STACK_NAME}\n          SECRET_KEY=${SECRET_KEY}\n          FIRST_SUPERUSER_EMAIL=${FIRST_SUPERUSER_EMAIL}\n          FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD}\n          FIRST_SUPERUSER_NAME=${FIRST_SUPERUSER_NAME}\n          POSTGRES_HOST=${POSTGRES_HOST}\n          POSTGRES_USER=${POSTGRES_USER}\n          POSTGRES_PASSWORD=${POSTGRES_PASSWORD}\n          POSTGRES_DB=${POSTGRES_DB}\n          VALKEY_HOST=${VALKEY_HOST}\n          VALKEY_PASSWORD=${VALKEY_PASSWORD}\n          HANDWRITING_OCR_TOKEN=${HANDWRITING_OCR_TOKEN}\n          USERNAME=${FIRST_SUPERUSER_EMAIL}\n          PASSWORD=${FIRST_SUPERUSER_PASSWORD}\n          HASHED_PASSWORD=${HASHED_PASSWORD}\n          EMAIL=${FIRST_SUPERUSER_EMAIL}\n          ERROR_NOTIFICATION_URL=${ERROR_NOTIFICATION_URL}\n          LOG_LEVEL=${LOG_LEVEL}\n          EOF\n      - name: Build and restart containers\n        timeout-minutes: 15\n        run: |\n          docker compose -f docker-compose.yml --project-name ${{ secrets.STACK_NAME_TESTING }} build\n          docker compose -f docker-compose.yml --project-name ${{ secrets.STACK_NAME_TESTING }} up -d\n"
