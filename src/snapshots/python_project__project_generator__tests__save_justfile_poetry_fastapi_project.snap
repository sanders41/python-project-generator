---
source: src/project_generator.rs
expression: content
---
"@_default:\n  just --list\n\n@lint:\n  echo mypy\n  just --justfile {{justfile()}} mypy\n  echo ruff-check\n  just --justfile {{justfile()}} ruff-check\n  echo ruff-format\n  just --justfile {{justfile()}} ruff-format\n\n@mypy:\n  poetry run mypy my_project tests\n\n@ruff-check:\n  poetry run ruff check my_project tests\n\n@ruff-format:\n  poetry run ruff format my_project tests\n\n@install:\n  poetry install\n\n@test *args=\"\":\n  poetry run pytest {{args}}\n\ngranian_cmd := if os() != \"windows\" {\n  \"poetry run granian app.main:app --host 127.0.0.1 --port 8000 --interface asgi --no-ws --runtime-mode st --loop uvloop --reload\"\n} else {\n  \"poetry run granian app.main:app --host 127.0.0.1 --port 8000 --interface asgi --no-ws --runtime-mode st --reload\"\n}\n\n@backend-server:\n  {{granian_cmd}}\n\n@test-parallel *args=\"\":\n  poetry run pytest -n auto {{args}}\n\n@docker-up:\n  docker compose up --build\n\n@docker-up-detached:\n  docker compose up --build -d\n\n@docker-up-services:\n  docker compose up db valkey migrations\n\n@docker-up-services-detached:\n  docker compose up db valkey migrations -d\n\n@docker-down:\n  docker compose down\n\n@docker-down-volumes:\n  docker compose down --volumes\n\n@docker-pull:\n  docker compose pull db valkey migrations\n\n@docker-build:\n  docker compose build\n"
